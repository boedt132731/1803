#!/bin/bash
# exit code: 
#    65 -> user input nothing
#    66 -> user input is not a number
#    67 -> user input out of range
#    68 -> vm disk image exists

IMG_DIR=/var/lib/libvirt/images
BASEVM=rh7_template
ROOM=`sed  -n "1p" /etc/hostname |  sed -r 's/(room)([0-9]{1,})(.*)/\2/'`
if [ $ROOM -le 9 ];then
ROOM=0$ROOM
fi
IP=`sed  -n "1p" /etc/hostname |   sed -r 's/(.*)([0-9]+)(.*)/\2/'`
read -p "Enter VM number: " VMNUM
if [ $VMNUM -le 9 ];then
VMNUM=$VMNUM
fi


if [ -z "${VMNUM}" ]; then
    echo "You must input a number."
    exit 65
elif [ $(echo ${VMNUM}*1 | bc) = 0 ]; then
    echo "You must input a number."
    exit 66
elif [ ${VMNUM} -lt 1 -o ${VMNUM} -gt 99 ]; then
    echo "Input out of range"
    exit 67
fi

NEWVM=a${VMNUM}

if [ -e $IMG_DIR/${NEWVM}.img ]; then
    echo "File exists."
    exit 68
fi

echo -en "Creating Virtual Machine disk image......\t"
qemu-img create -f qcow2 -b $IMG_DIR/.${BASEVM}.img $IMG_DIR/${NEWVM}.img &> /dev/null
echo -e "\e[32;1m[OK]\e[0m"

#virsh dumpxml ${BASEVM} > /tmp/myvm.xml
cat /var/lib/libvirt/images/.rhel7.xml > /tmp/myvm.xml
sed -i "/<name>${BASEVM}/s/${BASEVM}/${NEWVM}/" /tmp/myvm.xml
sed -i "/uuid/s/<uuid>.*<\/uuid>/<uuid>$(uuidgen)<\/uuid>/" /tmp/myvm.xml
sed -i "/${BASEVM}\.img/s/${BASEVM}/${NEWVM}/" /tmp/myvm.xml

sed -i "/mac /s/a1/${ROOM}/" /tmp/myvm.xml
sed -i "/mac /s/a2/${IP}/" /tmp/myvm.xml
sed -i "/mac /s/a3/${VMNUM}/" /tmp/myvm.xml

sed -i "/mac /s/b1/${ROOM}/" /tmp/myvm.xml
sed -i "/mac /s/b2/${IP}/" /tmp/myvm.xml
sed -i "/mac /s/b3/${VMNUM}/" /tmp/myvm.xml

sed -i "/mac /s/c1/${ROOM}/" /tmp/myvm.xml
sed -i "/mac /s/c2/${IP}/" /tmp/myvm.xml
sed -i "/mac /s/c3/${VMNUM}/" /tmp/myvm.xml

sed -i "/mac /s/d1/${ROOM}/" /tmp/myvm.xml
sed -i "/mac /s/d2/${IP}/" /tmp/myvm.xml
sed -i "/mac /s/d3/${VMNUM}/" /tmp/myvm.xml

echo -en "Defining new virtual machine......\t\t"
virsh define /tmp/myvm.xml &> /dev/null
echo -e "\e[32;1m[OK]\e[0m"

for i in "$VMNUM";do
virsh start a$VMNUM 
echo a$VMNUM start OK ；
done

for i in $VMNUM ;do
expect <<EOF
 spawn virsh console  a$VMNUM
sleep 50
expect "login:" {
 send "root\r"
 expect "Password: "
 send "123456\r"
#sleep 5
 expect "~]#"
  send "nmcli connection modify eth0 ipv4.method manual ipv4.addresses 192.168.4.$i/24 connection.autoconnect yes && nmcli connection up eth0\r" 
expect "~]#"
send "yum-config-manager --add ftp://192.168.4.254/rhel7 >/dev/null\r"

expect "~]#"
send "echo gpgcheck=0 >> /etc/yum.repos.d/192.168.4.254_rhel7.repo\r"}

expect eof
EOF
done
echo "ip地址为192.168.4.$VMNUM"
echo "YUM源配置完毕。"
